var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// node_modules/chai/web-test-runner.config.js
var web_test_runner_config_exports = {};
__export(web_test_runner_config_exports, {
  default: () => web_test_runner_config_default
});
module.exports = __toCommonJS(web_test_runner_config_exports);
var import_dev_server_rollup = require("@web/dev-server-rollup");
var import_plugin_commonjs = __toESM(require("@rollup/plugin-commonjs"), 1);
var commonjs = (0, import_dev_server_rollup.fromRollup)(import_plugin_commonjs.default);
var web_test_runner_config_default = {
  nodeResolve: true,
  files: [
    "test/*.js",
    "!test/virtual-machines.js"
  ],
  plugins: [
    commonjs({
      include: [
        // the commonjs plugin is slow, list the required packages explicitly:
        "**/node_modules/type-detect/**/*"
      ]
    })
  ]
};
//# sourceMappingURL=web-test-runner.config.js.map